pipeline {
    agent any 
    stages {
        stage('Checking Applications Versions') {
            steps {
                sh '''
                echo 'Applications Version'
                /usr/local/bin/aws --version
                /usr/local/bin/terraform --version
                /usr/local/bin/docker --version
                '''
            }
        }
        stage('Terraform Init') {
            steps {
                echo 'Planning the West VPC'
                sh '''
                cd $WORKSPACE/Multi-Tier/terraform
                ls -lrt
                /usr/local/bin/terraform init
                '''
            }
        }
        stage('Infrastructure Plan') {
            steps {
                echo 'Creating the West VPC'
                sh '''
                cd $WORKSPACE/Multi-Tier/terraform
                ls -lrt
                /usr/local/bin/terraform plan -out myplan
                '''
            }
        }
        stage('Approval') {
            steps {
            script {
            def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
                  }
                }
            }
        stage('Infrastructure Provisioning') {
            steps {
                echo 'Creating the West VPC'
                sh '''
                cd $WORKSPACE/Multi-Tier/terraform
                ls -lrt
                /usr/local/bin/terraform apply -input=false myplan
                '''
            }
        }
    }
}